{"ast":null,"code":"var _jsxFileName = \"/Users/rmahotra/Desktop/Assignment/React/redux_toolkit/src/features/counter/Counter.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { increment, decrement, reset, incrementByAmount } from './counterSlice';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Counter() {\n  _s();\n  const count = useSelector(state => state.counter.count);\n  const dispatch = useDispatch();\n  const [incrementAmount, setIncrementAmount] = useState(0);\n  const addValue = Number(incrementAmount) || 0;\n  const resetAll = () => {\n    setIncrementAmount(0);\n    dispatch(reset());\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\" \", count, \" \"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => dispatch(increment()),\n        children: \" + \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 23,\n        columnNumber: 12\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => dispatch(decrement()),\n        children: \" - \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 24,\n        columnNumber: 12\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => dispatch(resetAll()),\n        children: \" Reset \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 12\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      value: incrementAmount,\n      onChange: e => setIncrementAmount(e.target.value)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: () => dispatch(incrementByAmount(addValue)),\n      children: \" Add \"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 20,\n    columnNumber: 5\n  }, this);\n}\n_s(Counter, \"sZy6uAvQKvXeI2APXYl6CAWhzHw=\", false, function () {\n  return [useSelector, useDispatch];\n});\n_c = Counter;\nexport default Counter;\nvar _c;\n$RefreshReg$(_c, \"Counter\");","map":{"version":3,"names":["React","useState","useSelector","useDispatch","increment","decrement","reset","incrementByAmount","jsxDEV","_jsxDEV","Counter","_s","count","state","counter","dispatch","incrementAmount","setIncrementAmount","addValue","Number","resetAll","children","fileName","_jsxFileName","lineNumber","columnNumber","onClick","type","value","onChange","e","target","_c","$RefreshReg$"],"sources":["/Users/rmahotra/Desktop/Assignment/React/redux_toolkit/src/features/counter/Counter.js"],"sourcesContent":["import React, {useState} from 'react'\nimport { useSelector, useDispatch } from 'react-redux';\nimport { increment, decrement, reset, incrementByAmount } from './counterSlice';\n\nfunction Counter() {\n    \n    const count = useSelector((state) => state.counter.count)\n    const dispatch = useDispatch();\n\n    const [incrementAmount, setIncrementAmount] = useState(0);\n\n    const addValue = Number(incrementAmount) || 0; \n\n    const resetAll = () => {\n        setIncrementAmount(0);\n        dispatch(reset());\n    }\n\n  return (\n    <div>\n        <p> { count } </p>\n        <div>\n           <button onClick = {() => dispatch(increment())}> + </button>\n           <button onClick = {() => dispatch(decrement())}> - </button>\n           <button onClick = {() => dispatch(resetAll())}> Reset </button>\n        </div>\n        <input type = \"text\" value={incrementAmount}\n        onChange={(e) => setIncrementAmount(e.target.value)}\n        ></input>\n        <button onClick = {() => dispatch(incrementByAmount(addValue))}> Add </button>\n    </div>\n  )\n}\n\nexport default Counter; \n"],"mappings":";;AAAA,OAAOA,KAAK,IAAGC,QAAQ,QAAO,OAAO;AACrC,SAASC,WAAW,EAAEC,WAAW,QAAQ,aAAa;AACtD,SAASC,SAAS,EAAEC,SAAS,EAAEC,KAAK,EAAEC,iBAAiB,QAAQ,gBAAgB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEhF,SAASC,OAAOA,CAAA,EAAG;EAAAC,EAAA;EAEf,MAAMC,KAAK,GAAGV,WAAW,CAAEW,KAAK,IAAKA,KAAK,CAACC,OAAO,CAACF,KAAK,CAAC;EACzD,MAAMG,QAAQ,GAAGZ,WAAW,EAAE;EAE9B,MAAM,CAACa,eAAe,EAAEC,kBAAkB,CAAC,GAAGhB,QAAQ,CAAC,CAAC,CAAC;EAEzD,MAAMiB,QAAQ,GAAGC,MAAM,CAACH,eAAe,CAAC,IAAI,CAAC;EAE7C,MAAMI,QAAQ,GAAGA,CAAA,KAAM;IACnBH,kBAAkB,CAAC,CAAC,CAAC;IACrBF,QAAQ,CAACT,KAAK,EAAE,CAAC;EACrB,CAAC;EAEH,oBACEG,OAAA;IAAAY,QAAA,gBACIZ,OAAA;MAAAY,QAAA,GAAG,GAAC,EAAET,KAAK,EAAE,GAAC;IAAA;MAAAU,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QAAI,eAClBhB,OAAA;MAAAY,QAAA,gBACGZ,OAAA;QAAQiB,OAAO,EAAIA,CAAA,KAAMX,QAAQ,CAACX,SAAS,EAAE,CAAE;QAAAiB,QAAA,EAAC;MAAG;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,QAAS,eAC5DhB,OAAA;QAAQiB,OAAO,EAAIA,CAAA,KAAMX,QAAQ,CAACV,SAAS,EAAE,CAAE;QAAAgB,QAAA,EAAC;MAAG;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,QAAS,eAC5DhB,OAAA;QAAQiB,OAAO,EAAIA,CAAA,KAAMX,QAAQ,CAACK,QAAQ,EAAE,CAAE;QAAAC,QAAA,EAAC;MAAO;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,QAAS;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QAC5D,eACNhB,OAAA;MAAOkB,IAAI,EAAG,MAAM;MAACC,KAAK,EAAEZ,eAAgB;MAC5Ca,QAAQ,EAAGC,CAAC,IAAKb,kBAAkB,CAACa,CAAC,CAACC,MAAM,CAACH,KAAK;IAAE;MAAAN,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QAC3C,eACThB,OAAA;MAAQiB,OAAO,EAAIA,CAAA,KAAMX,QAAQ,CAACR,iBAAiB,CAACW,QAAQ,CAAC,CAAE;MAAAG,QAAA,EAAC;IAAK;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QAAS;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,QAC5E;AAEV;AAACd,EAAA,CA5BQD,OAAO;EAAA,QAEER,WAAW,EACRC,WAAW;AAAA;AAAA6B,EAAA,GAHvBtB,OAAO;AA8BhB,eAAeA,OAAO;AAAC,IAAAsB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}